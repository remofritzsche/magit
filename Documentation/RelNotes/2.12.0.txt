Magit v2.12.0 Release Notes (unreleased)
========================================

Changes since v2.11.0
---------------------

* Added new commands `magit-previous-line' and `magit-next-line' as
  substitutes for `previous-line' and `next-line'.  Magit's selection
  mechanism is based on the region but selects an area that is larger
  than the region.  This causes shift selection to select two lines
  on the first invocation when using the vanilla commands.  The new
  Magit-specific variants don't move point on the first invocation
  and thereby they only selects a single line.  Which inconsistency
  you prefer is a matter of preference.  #2912

  To use the Magit-specific variants add this to your init file:

    (define-key magit-mode-map [remap previous-line] 'magit-previous-line)
    (define-key magit-mode-map [remap next-line] 'magit-next-line)

* The command `magit-refs-popup' now remembers arguments and they are
  displayed in the header-line of `magit-refs-mode' buffers.  The popup
  command still invokes the default action by default when invoked from
  another buffer, but when invoked from a `magit-refs-mode' buffer it
  now shows the popup.  #2898

* Added new command `magit-branch-or-checkout' as a potential
  substitute for `magit-checkout'.  Setup instructions can be found in
  the manual.  #3104

* Added new customizable options `magit-log-highlight-keywords' and
  `magit-diff-highlight-keywords' which control whether text inside
  brackets is highlighted in magit-log and magit-diff buffers
  respectively.  #3190

* When the names of Magit buffers are not uniquified then their names
  now end with an asterisk.  When the `uniquify' package is used, then
  that still is not possible due to limitations in that package.  #2841

* Added the existing commands `magit-blame' and `magit-blob-next' to
  the `magit-file-popup'.

* Added new command `magit-blame-reverse'.  See the updated manual
  for information on how to best use this and other blaming commands.
  #3055

* Keywords in brackets are now being highlighted in `magit-refs-mode'
  buffers like they already were in logs.  #3179

* Added new variable `magit-buffer-lock-functions' to support
  third-party packages in creating Magit-like buffers.  #3191

* Added new command `magit-rebase-remove-commit' to the rebase popup.

* The remote popup can now be used to set various remote related
  variables.  #3165

* Added new commands `magit-patch-apply' and `magit-patch-apply-popup'.
  The latter is available from inside `magit-am-popup' ("w").  #2940

* Added new command `magit-patch-save' for saving a diff into a patch
  file.  In diff buffers it is bound to "C-x C-w".  #2950

* Added new command `magit-stash-branch-here', which — unlike the
  existing `magit-stash-branch' — creates a branch that starts at
  the current HEAD instead of at the commit that was current when
  the stash was created.  #2935

* Added new command `magit-dired-log' intended to be bound in
  `dired-mode-map'.  #3011

* The list of rebase actions displayed in the status buffer now also
  shows "exec" actions.  #3003

* While it exists, the stash created by `git rebase --autostash' is
  now also displayed in the list of stashes.  #3146

* When the current branch has no upstream or when all commits have
  already been pushed there, then the status buffer now shows
  `magit-log-section-commit-count' recent commit.  If you previously
  used `magit-insert-unpulled-from-upstream-or-recent', then remove
  that from `magit-status-sections-hook', as it is an obsolete alias
  for `magit-insert-unpulled-from-upstream' now.  #3227

* When switching between showing "Unmerged into <upstream>" and
  "Recent commits", preserve the visibility of that section.  #3227

* When prompting for a branch to delete then the default branch is
  no longer offered as default choice, except in cases where it is
  likely that that is actually what the user wants.  #2924

* Added new popup `magit-worktree-popup' and bound "%" to it.  #2927

* The commands `magit-file-delete' and `magit-file-untrack' now act on
  the selected files and force with a prefix argument they force the
  action.  #2930

* When requesting the history of a single file that is no longer being
  tracked use the `--full-history' argument.  Otherwise no history at
  all would be show.  #3012

* Leading tabs in files no longer cause misalignment in diffs.  This
  is done by overriding the mechanism used by the display engine to
  determine how width a tab should be, which doesn't work when there
  are additional characters before the "leading" tabs that should
  count as an additional, but very short tab-stop.  #3185

* The command `magit-visit-ref' now drops the prefix argument before
  calling `magit-show-commit' when appropriate, and when using the
  `create-branch' variant and the branch exists, then it offers to
  simply checking it out instead of resetting it first.  #3009

Fixes since v2.11.0
-------------------

* `git-rebase-mode-show-keybindings' failed to process non-English
  usage instructions in interactive rebase buffers.  #3175

* Fixup commands did not warn about merges in the rebase range until
  after creating the fixup commit.  #3176

* Instant fixup allowed selecting a commit that is not reachable from
  HEAD, which, for the instant variants (but only those), clearly is
  a user mistake that should be caught immediately.  #3176

* The command `magit-branch-rename' failed to rename a local branch if
  a tag existed with the same name.  #3222

* The command `magit-file-delete ignored the prefix argument instead
  of forcing the action as intended.
